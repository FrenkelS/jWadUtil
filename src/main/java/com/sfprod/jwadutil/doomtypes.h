#ifndef DOOMTYPES_H
#define DOOMTYPES_H

typedef qint32 fixed_t;
typedef quint32 angle_t;


//*************************************************************************************
//WAD file structs from Doom sources.
//*************************************************************************************

#pragma pack(push,1)


//
// Map level types.
// The following data structures define the persistent format
// used in the lumps of the WAD files.
//


//*************************************************************************************
//r_defs structs from Doom sources.
//*************************************************************************************

typedef struct
{
    fixed_t x, y;
} vertex_t;


#define NO_INDEX ((unsigned short)-1)

#define ML_TWOSIDED             4


typedef struct line_s
{
    vertex_t v1;
    vertex_t v2;            // Vertices, from v1 to v2.
    quint32 lineno;         //line number.
    fixed_t dx, dy;        // Precalculated v2 - v1 for side checking.

    quint16 sidenum[2];        // Visual appearance: SideDefs.

    fixed_t bbox[4];        //Line bounding box.

    quint16 flags;           // Animation related.
    qint16 special;
    qint16 tag;
    quint16 slopetype; // To aid move clipping.

} line_t;



// LineSeg, generated by splitting LineDefs
// using partition lines selected by BSP builder.
typedef struct {
  unsigned short v1;
  unsigned short v2;
  short angle;
  unsigned short linedef;
  short side;
  short offset;
} mapseg_t;


//
// The LineSeg.
//
typedef struct
{
    vertex_t v1;
    vertex_t v2;            // Vertices, from v1 to v2.

    fixed_t offset;
    angle_t angle;

    quint16 sidenum;
    quint16 linenum;

    quint16 frontsectornum;
    quint16 backsectornum;
} seg_t;



// A SideDef, defining the visual appearance of a wall,
// by setting textures and offsets.
typedef struct
{
  short textureoffset;
  short rowoffset;
  char  toptexture[8];
  char  bottomtexture[8];
  char  midtexture[8];
  short sector;  // Front sector, towards viewer.
} mapsidedef_t;

// A SideDef, defining the visual appearance of a wall,
// by setting textures and offsets.
typedef struct
{
  short textureoffset;
  short rowoffset;
  short toptexture;
  short bottomtexture;
  short midtexture;
  short sector;  // Front sector, towards viewer.
} sidedef_t;

typedef struct
{
  short originx;
  short originy;
  short patch;
  short stepdir;         // unused in Doom but might be used in Phase 2 Boom
  short colormap;        // unused in Doom but might be used in Phase 2 Boom
} mappatch_t;

typedef struct
{
  char       name[8];
  char       pad2[4];      // unused
  short      width;
  short      height;
  char       pad[4];       // unused in Doom but might be used in Boom Phase 2
  short      patchcount;
  mappatch_t patches[1];
} maptexture_t;

#pragma pack(pop)

#endif // DOOMTYPES_H
